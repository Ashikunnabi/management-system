# Generated by Django 3.0.5 on 2020-11-22 12:11

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rbac', '0018_auto_20201118_1027'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, max_length=500, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator(message='Vendor contains alphanumeric, underscore, space and period(.). Length: 2 to 100', regex='[-a-zA-Z0-9_.\\s]{2,100}$')])),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_department', to='rbac.Department')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, max_length=500, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('mobile', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator(message='Mobile number must start with +8801 or 8801', regex='\\+?(88)?01[3456789][0-9]{8}\x08')])),
                ('email', models.EmailField(max_length=254)),
                ('address', models.TextField()),
                ('profession', models.CharField(max_length=50)),
                ('organization_name', models.CharField(max_length=50)),
                ('organization_address', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, max_length=500, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator(message='Vendor contains alphanumeric, underscore, space and period(.). Length: 2 to 100', regex='[-a-zA-Z0-9_.\\s]{2,100}$')])),
                ('code', models.CharField(max_length=10, unique=True)),
                ('box_number', models.CharField(blank=True, max_length=50, null=True)),
                ('physical_location', models.CharField(blank=True, max_length=50, null=True)),
                ('extra_description', models.TextField()),
                ('unit_price', models.FloatField(default=0.0)),
                ('available_stock', models.IntegerField()),
                ('safety_stock_limit', models.IntegerField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_category', to='inventory.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, max_length=500, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator(message='Vendor contains alphanumeric, underscore, space and period(.). Length: 2 to 100', regex='[-a-zA-Z0-9_.\\s]{2,100}$')])),
                ('mobile', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator(message='Mobile number must start with +8801 or 8801', regex='\\+?(88)?01[3456789][0-9]{8}\x08')])),
                ('address', models.TextField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_category', to='inventory.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, max_length=500, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice_no', models.CharField(default='04b8df7a', max_length=8)),
                ('product_details', models.TextField()),
                ('quantity', models.IntegerField()),
                ('other_information', models.TextField()),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_department', to='rbac.Department')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_product', to='inventory.Product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, max_length=500, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice_no', models.CharField(default='469d1521', max_length=8)),
                ('purchase_type', models.IntegerField(choices=[(1, 'Full Payment'), (2, 'EMI'), (3, 'Discount'), (4, 'Full Free')])),
                ('product_details', models.TextField()),
                ('quantity', models.TextField()),
                ('actual_price', models.FloatField()),
                ('vat', models.FloatField()),
                ('service_charge', models.FloatField()),
                ('discount', models.IntegerField(blank=True, null=True)),
                ('total_price', models.FloatField()),
                ('paid_price', models.FloatField()),
                ('emi_tenor_month', models.IntegerField(blank=True, null=True)),
                ('emi_tenor_month_paid', models.IntegerField(blank=True, null=True)),
                ('emi_tenor_monthly_amount', models.FloatField(blank=True, null=True)),
                ('payment_history', models.TextField(blank=True, null=True)),
                ('payment_gateway_information', models.TextField()),
                ('other_information', models.TextField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sell_customer', to='inventory.Customer')),
                ('product', models.ManyToManyField(to='inventory.Product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='product',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_vendor', to='inventory.Vendor'),
        ),
        migrations.CreateModel(
            name='Buy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, max_length=500, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document', models.FileField(blank=True, null=True, upload_to='inventory/document/buy/%Y/%m/%d')),
                ('quantity', models.IntegerField()),
                ('unit_price', models.FloatField(default=0.0)),
                ('price_changed', models.BooleanField(default=False)),
                ('comment', models.TextField()),
                ('bought_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buy_customer', to='inventory.Customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buy_product', to='inventory.Product')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
